{"ast":null,"code":"import axios from 'axios';\nconst baseUserService = axios.create({\n  baseURL: '/api/user'\n});\n\nconst getUserById = id => {\n  console.log(id);\n  return baseUserService.get(`/${id}`, id).then(result => {\n    const user = result.data.user;\n    const projects = result.data.projects;\n    const actions = result.data.actions;\n    console.log('actions', actions);\n    return Promise.resolve({\n      user,\n      projects,\n      actions\n    });\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst updateUser = body => {\n  const form = new FormData();\n  form.append('username', body.username);\n  form.append('location', body.location);\n  form.append('bio', body.bio);\n  if (body.pictureUrl !== null) form.append('pictureUrl', body.pictureUrl);\n  return baseUserService.post(`/${body._id}/edit`, form).then(result => {\n    const user = result.data.user;\n    return Promise.resolve(user);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getActionsByUserId = userId => {\n  return baseUserService.get(`/${userId}/actions`).then(result => {\n    const actions = result.data.actions;\n    return Promise.resolve(actions);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getProjectsByUserId = userId => {\n  return baseUserService.get(`/${userId}/projects`).then(result => {\n    const projects = result.data.projects;\n    return Promise.resolve(projects);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nexport { getProjectsByUserId, getActionsByUserId, updateUser, getUserById };","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/services/user.jsx"],"names":["axios","baseUserService","create","baseURL","getUserById","id","console","log","get","then","result","user","data","projects","actions","Promise","resolve","catch","err","reject","updateUser","body","form","FormData","append","username","location","bio","pictureUrl","post","_id","getActionsByUserId","userId","getProjectsByUserId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst baseUserService = axios.create({\n  baseURL: '/api/user',\n});\n\nconst getUserById = (id) => {\n  console.log(id);\n  return baseUserService\n    .get(`/${id}`, id)\n    .then((result) => {\n      const user = result.data.user;\n      const projects = result.data.projects;\n      const actions = result.data.actions;\n      console.log('actions', actions);\n      return Promise.resolve({ user, projects, actions });\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst updateUser = (body) => {\n  const form = new FormData();\n  form.append('username', body.username);\n  form.append('location', body.location);\n  form.append('bio', body.bio);\n  if (body.pictureUrl !== null) form.append('pictureUrl', body.pictureUrl);\n\n  return baseUserService\n    .post(`/${body._id}/edit`, form)\n    .then((result) => {\n      const user = result.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getActionsByUserId = (userId) => {\n  return baseUserService\n    .get(`/${userId}/actions`)\n    .then((result) => {\n      const actions = result.data.actions;\n      return Promise.resolve(actions);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getProjectsByUserId = (userId) => {\n  return baseUserService\n    .get(`/${userId}/projects`)\n    .then((result) => {\n      const projects = result.data.projects;\n      return Promise.resolve(projects);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport { getProjectsByUserId, getActionsByUserId, updateUser, getUserById };\n"]},"metadata":{},"sourceType":"module"}