{"ast":null,"code":"import axios from'axios';var baseAuthenticationService=axios.create({baseURL:'/api/authentication'});var login=function login(body){return baseAuthenticationService.post('/login',body).then(function(result){var user=result.data.user;return Promise.resolve(user);}).catch(function(err){return Promise.reject(err);});};var register=function register(body){/*const form = new FormData();\n\n  form.append('username', body.username);\n  form.append('email', body.email);\n  form.append('password', body.password);*/return baseAuthenticationService.post('/register',body).then(function(result){var user=result.data.user;return Promise.resolve(user);}).catch(function(err){return Promise.reject(err);});};var logout=function logout(){return baseAuthenticationService.post('/logout').then(function(response){return Promise.resolve();}).catch(function(error){return Promise.reject(error);});};var loadAuthenticatedUser=function loadAuthenticatedUser(){return baseAuthenticationService.get('/me').then(function(response){var user=response.data.user;return Promise.resolve(user);}).catch(function(error){return Promise.reject(error);});};export{register,login,logout,loadAuthenticatedUser};","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/services/authentication.jsx"],"names":["axios","baseAuthenticationService","create","baseURL","login","body","post","then","result","user","data","Promise","resolve","catch","err","reject","register","logout","response","error","loadAuthenticatedUser","get"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,yBAAyB,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC7CC,OAAO,CAAE,qBADoC,CAAb,CAAlC,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,IAAD,CAAU,CACtB,MAAOJ,CAAAA,yBAAyB,CAC7BK,IADI,CACC,QADD,CACWD,IADX,EAEJE,IAFI,CAEC,SAACC,MAAD,CAAY,CAChB,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACE,IAAP,CAAYD,IAAzB,CACA,MAAOE,CAAAA,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP,CACD,CALI,EAMJI,KANI,CAME,SAACC,GAAD,CAAS,CACd,MAAOH,CAAAA,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP,CACD,CARI,CAAP,CASD,CAVD,CAYA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACX,IAAD,CAAU,CACzB;;;;2CAMA,MAAOJ,CAAAA,yBAAyB,CAC7BK,IADI,CACC,WADD,CACcD,IADd,EAGJE,IAHI,CAGC,SAACC,MAAD,CAAY,CAChB,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACE,IAAP,CAAYD,IAAzB,CACA,MAAOE,CAAAA,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP,CACD,CANI,EAOJI,KAPI,CAOE,SAACC,GAAD,CAAS,CACd,MAAOH,CAAAA,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP,CACD,CATI,CAAP,CAUD,CAjBD,CAmBA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,MAAOhB,CAAAA,yBAAyB,CAC7BK,IADI,CACC,SADD,EAEJC,IAFI,CAEC,SAACW,QAAD,CAAc,CAClB,MAAOP,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CAJI,EAKJC,KALI,CAKE,SAACM,KAAD,CAAW,CAChB,MAAOR,CAAAA,OAAO,CAACI,MAAR,CAAeI,KAAf,CAAP,CACD,CAPI,CAAP,CAQD,CATD,CAWA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,MAAOnB,CAAAA,yBAAyB,CAC7BoB,GADI,CACA,KADA,EAEJd,IAFI,CAEC,SAACW,QAAD,CAAc,CAClB,GAAMT,CAAAA,IAAI,CAAGS,QAAQ,CAACR,IAAT,CAAcD,IAA3B,CACA,MAAOE,CAAAA,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP,CACD,CALI,EAMJI,KANI,CAME,SAACM,KAAD,CAAW,CAChB,MAAOR,CAAAA,OAAO,CAACI,MAAR,CAAeI,KAAf,CAAP,CACD,CARI,CAAP,CASD,CAVD,CAYA,OAASH,QAAT,CAAmBZ,KAAnB,CAA0Ba,MAA1B,CAAkCG,qBAAlC","sourcesContent":["import axios from 'axios';\n\nconst baseAuthenticationService = axios.create({\n  baseURL: '/api/authentication'\n});\n\nconst login = (body) => {\n  return baseAuthenticationService\n    .post('/login', body)\n    .then((result) => {\n      const user = result.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst register = (body) => {\n  /*const form = new FormData();\n\n  form.append('username', body.username);\n  form.append('email', body.email);\n  form.append('password', body.password);*/\n\n  return baseAuthenticationService\n    .post('/register', body)\n\n    .then((result) => {\n      const user = result.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst logout = () => {\n  return baseAuthenticationService\n    .post('/logout')\n    .then((response) => {\n      return Promise.resolve();\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nconst loadAuthenticatedUser = () => {\n  return baseAuthenticationService\n    .get('/me')\n    .then((response) => {\n      const user = response.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nexport { register, login, logout, loadAuthenticatedUser };\n"]},"metadata":{},"sourceType":"module"}