{"ast":null,"code":"import axios from 'axios';\nconst baseAuthenticationService = axios.create({\n  baseURL: '/api/authentication'\n});\n\nconst login = body => {\n  return baseAuthenticationService.post('/login', body).then(result => {\n    const user = result.data.user;\n    return Promise.resolve(user);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst register = body => {\n  const form = new FormData();\n  form.append('username', body.username);\n  form.append('email', body.email);\n  form.append('password', body.password);\n  console.dir(form.append);\n  return baseAuthenticationService.post('/register', form).then(result => {\n    const user = result.data.user;\n    return Promise.resolve(user);\n  }).catch(err => {\n    console.log('O erro está a passar aqui');\n    return Promise.reject(err);\n  });\n};\n\nconst signOut = () => {\n  return baseAuthenticationService.post('/sign-out').then(response => {\n    return Promise.resolve();\n  }).catch(error => {\n    return Promise.reject(error);\n  });\n};\n\nconst loadAuthenticatedUser = () => {\n  return baseAuthenticationService.get('/me').then(response => {\n    const user = response.data.user;\n    return Promise.resolve(user);\n  }).catch(error => {\n    return Promise.reject(error);\n  });\n};\n\nexport { register, login, signOut, loadAuthenticatedUser };","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/services/authentication.jsx"],"names":["axios","baseAuthenticationService","create","baseURL","login","body","post","then","result","user","data","Promise","resolve","catch","err","reject","register","form","FormData","append","username","email","password","console","dir","log","signOut","response","error","loadAuthenticatedUser","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,yBAAyB,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7CC,EAAAA,OAAO,EAAE;AADoC,CAAb,CAAlC;;AAIA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACtB,SAAOJ,yBAAyB,CAC7BK,IADI,CACC,QADD,EACWD,IADX,EAEJE,IAFI,CAEEC,MAAD,IAAY;AAChB,UAAMC,IAAI,GAAGD,MAAM,CAACE,IAAP,CAAYD,IAAzB;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACD,GALI,EAMJI,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,MAAME,QAAQ,GAAIX,IAAD,IAAU;AACzB,QAAMY,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBd,IAAI,CAACe,QAA7B;AACAH,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBd,IAAI,CAACgB,KAA1B;AACAJ,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBd,IAAI,CAACiB,QAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACE,MAAjB;AACA,SAAOlB,yBAAyB,CAC7BK,IADI,CACC,WADD,EACcW,IADd,EAGJV,IAHI,CAGEC,MAAD,IAAY;AAChB,UAAMC,IAAI,GAAGD,MAAM,CAACE,IAAP,CAAYD,IAAzB;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACD,GANI,EAOJI,KAPI,CAOGC,GAAD,IAAS;AACdS,IAAAA,OAAO,CAACE,GAAR,CAAY,2BAAZ;AACA,WAAOd,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GAVI,CAAP;AAWD,CAlBD;;AAoBA,MAAMY,OAAO,GAAG,MAAM;AACpB,SAAOzB,yBAAyB,CAC7BK,IADI,CACC,WADD,EAEJC,IAFI,CAEEoB,QAAD,IAAc;AAClB,WAAOhB,OAAO,CAACC,OAAR,EAAP;AACD,GAJI,EAKJC,KALI,CAKGe,KAAD,IAAW;AAChB,WAAOjB,OAAO,CAACI,MAAR,CAAea,KAAf,CAAP;AACD,GAPI,CAAP;AAQD,CATD;;AAWA,MAAMC,qBAAqB,GAAG,MAAM;AAClC,SAAO5B,yBAAyB,CAC7B6B,GADI,CACA,KADA,EAEJvB,IAFI,CAEEoB,QAAD,IAAc;AAClB,UAAMlB,IAAI,GAAGkB,QAAQ,CAACjB,IAAT,CAAcD,IAA3B;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACD,GALI,EAMJI,KANI,CAMGe,KAAD,IAAW;AAChB,WAAOjB,OAAO,CAACI,MAAR,CAAea,KAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,SAASZ,QAAT,EAAmBZ,KAAnB,EAA0BsB,OAA1B,EAAmCG,qBAAnC","sourcesContent":["import axios from 'axios';\n\nconst baseAuthenticationService = axios.create({\n  baseURL: '/api/authentication'\n});\n\nconst login = (body) => {\n  return baseAuthenticationService\n    .post('/login', body)\n    .then((result) => {\n      const user = result.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst register = (body) => {\n  const form = new FormData();\n\n  form.append('username', body.username);\n  form.append('email', body.email);\n  form.append('password', body.password);\n  console.dir(form.append);\n  return baseAuthenticationService\n    .post('/register', form)\n\n    .then((result) => {\n      const user = result.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((err) => {\n      console.log('O erro está a passar aqui');\n      return Promise.reject(err);\n    });\n};\n\nconst signOut = () => {\n  return baseAuthenticationService\n    .post('/sign-out')\n    .then((response) => {\n      return Promise.resolve();\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nconst loadAuthenticatedUser = () => {\n  return baseAuthenticationService\n    .get('/me')\n    .then((response) => {\n      const user = response.data.user;\n      return Promise.resolve(user);\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n};\n\nexport { register, login, signOut, loadAuthenticatedUser };\n"]},"metadata":{},"sourceType":"module"}