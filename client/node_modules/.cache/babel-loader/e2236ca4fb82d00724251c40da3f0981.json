{"ast":null,"code":"import axios from 'axios';\nconst baseProjectService = axios.create({\n  baseURL: '/api/project'\n});\n\nconst getAllprojects = () => {\n  return baseProjectService.get('/list').then(result => {\n    const projects = result.data.projects;\n    return Promise.resolve(projects);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getProjectById = id => {\n  return baseProjectService.get(`/${id}`).then(result => {\n    const project = result.data.project;\n    return Promise.resolve(project);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst deleteProjectById = id => {\n  return baseProjectService.get(`/${id}/delete`).then(result => {\n    const project = result.data.project;\n    return Promise.resolve(project);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst updateProject = body => {\n  const form = new FormData();\n  form.append('title', body.title);\n  form.append('description', body.description);\n  form.append('location', body.location);\n  if (body.coverPictureUrl !== null) form.append('coverPictureUrl', body.coverPictureUrl);\n  return baseProjectService.post(`/${body._id}/edit`, form).then(result => {\n    const project = result.data.project;\n    return Promise.resolve(project);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getProjectByCategory = category => {\n  return baseProjectService.get(`/category/${category}`).then(result => {\n    const projects = result.data.projects;\n    return Promise.resolve(projects);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst createProject = data => {\n  console.log(data);\n  const form = new FormData();\n  form.append('title', data.title);\n  form.append('description', data.description);\n  form.append('category', data.category);\n  form.append('money', data.money);\n  form.append('resources', JSON.stringify(data.resources));\n  form.append('volunteer', JSON.stringify(data.volunteer));\n  form.append('location', data.location);\n  form.append('coverPictureUrl', data.coverPictureUrl);\n  console.log('create client', data);\n  return baseProjectService.post('/create', form).then(result => {}).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nexport { createProject, getAllprojects, getProjectByCategory, getProjectById, updateProject, deleteProjectById };","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/services/project.jsx"],"names":["axios","baseProjectService","create","baseURL","getAllprojects","get","then","result","projects","data","Promise","resolve","catch","err","reject","getProjectById","id","project","deleteProjectById","updateProject","body","form","FormData","append","title","description","location","coverPictureUrl","post","_id","getProjectByCategory","category","createProject","console","log","money","JSON","stringify","resources","volunteer"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst baseProjectService = axios.create({\n  baseURL: '/api/project'\n});\n\nconst getAllprojects = () => {\n  return baseProjectService\n    .get('/list')\n    .then((result) => {\n      const projects = result.data.projects;\n      return Promise.resolve(projects);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getProjectById = (id) => {\n  return baseProjectService\n    .get(`/${id}`)\n    .then((result) => {\n      const project = result.data.project;\n      return Promise.resolve(project);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst deleteProjectById = (id) => {\n  return baseProjectService\n    .get(`/${id}/delete`)\n    .then((result) => {\n      const project = result.data.project;\n      return Promise.resolve(project);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst updateProject = (body) => {\n  const form = new FormData();\n  form.append('title', body.title);\n  form.append('description', body.description);\n  form.append('location', body.location);\n  if (body.coverPictureUrl !== null) form.append('coverPictureUrl', body.coverPictureUrl);\n\n  return baseProjectService\n    .post(`/${body._id}/edit`, form)\n    .then((result) => {\n      const project = result.data.project;\n      return Promise.resolve(project);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getProjectByCategory = (category) => {\n  return baseProjectService\n    .get(`/category/${category}`)\n    .then((result) => {\n      const projects = result.data.projects;\n      return Promise.resolve(projects);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst createProject = (data) => {\n  console.log(data);\n  const form = new FormData();\n  form.append('title', data.title);\n  form.append('description', data.description);\n  form.append('category', data.category);\n  form.append('money', data.money);\n  form.append('resources', JSON.stringify(data.resources));\n  form.append('volunteer', JSON.stringify(data.volunteer));\n  form.append('location', data.location);\n  form.append('coverPictureUrl', data.coverPictureUrl);\n\n  console.log('create client', data);\n  return baseProjectService\n    .post('/create', form)\n    .then((result) => {})\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport {\n  createProject,\n  getAllprojects,\n  getProjectByCategory,\n  getProjectById,\n  updateProject,\n  deleteProjectById\n};\n"]},"metadata":{},"sourceType":"module"}