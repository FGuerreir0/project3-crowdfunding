{"ast":null,"code":"import axios from 'axios';\nconst baseProjectService = axios.create({\n  baseURL: '/api/project'\n});\n\nconst getAllprojects = () => {\n  return baseProjectService.get('/list').then(result => {\n    const projects = result.data.projects;\n    return Promise.resolve(projects);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getProjectById = id => {\n  return baseProjectService.get(`/${id}`).then(result => {\n    const project = result.data.project;\n    return Promise.resolve(project);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst updateProject = body => {\n  return baseProjectService.post(`/${body.id}/edit`, body).then(result => {\n    const project = result.data.project;\n    console.log(project);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst getProjectByCategory = category => {\n  return baseProjectService.get(`/category/${category}`).then(result => {\n    const projects = result.data.projects;\n    return Promise.resolve(projects);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nconst createProject = data => {\n  const form = new FormData();\n  form.append('title', data.title);\n  form.append('description', data.description);\n  form.append('money', data.money);\n  form.append('resources', JSON.stringify(data.resources));\n  form.append('volunteer', JSON.stringify(data.volunteer));\n  form.append('location', data.location);\n  form.append('coverPictureUrl', data.coverPictureUrl);\n  console.log('create client', data);\n  return baseProjectService.post('/create', form).then(result => {}).catch(err => {\n    return Promise.reject(err);\n  });\n};\n\nexport { createProject, getAllprojects, getProjectByCategory, getProjectById };","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/services/project.jsx"],"names":["axios","baseProjectService","create","baseURL","getAllprojects","get","then","result","projects","data","Promise","resolve","catch","err","reject","getProjectById","id","project","updateProject","body","post","console","log","getProjectByCategory","category","createProject","form","FormData","append","title","description","money","JSON","stringify","resources","volunteer","location","coverPictureUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAE;AAD6B,CAAb,CAA3B;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOH,kBAAkB,CACtBI,GADI,CACA,OADA,EAEJC,IAFI,CAEEC,MAAD,IAAY;AAChB,UAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYD,QAA7B;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACD,GALI,EAMJI,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,MAAME,cAAc,GAAIC,EAAD,IAAQ;AAC7B,SAAOf,kBAAkB,CACtBI,GADI,CACC,IAAGW,EAAG,EADP,EAEJV,IAFI,CAEEC,MAAD,IAAY;AAChB,UAAMU,OAAO,GAAGV,MAAM,CAACE,IAAP,CAAYQ,OAA5B;AACA,WAAOP,OAAO,CAACC,OAAR,CAAgBM,OAAhB,CAAP;AACD,GALI,EAMJL,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,MAAMK,aAAa,GAAIC,IAAD,IAAU;AAC9B,SAAOlB,kBAAkB,CACtBmB,IADI,CACE,IAAGD,IAAI,CAACH,EAAG,OADb,EACqBG,IADrB,EAEJb,IAFI,CAEEC,MAAD,IAAY;AAChB,UAAMU,OAAO,GAAGV,MAAM,CAACE,IAAP,CAAYQ,OAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,GALI,EAMJL,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,MAAMU,oBAAoB,GAAIC,QAAD,IAAc;AACzC,SAAOvB,kBAAkB,CACtBI,GADI,CACC,aAAYmB,QAAS,EADtB,EAEJlB,IAFI,CAEEC,MAAD,IAAY;AAChB,UAAMC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYD,QAA7B;AACA,WAAOE,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACD,GALI,EAMJI,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAVD;;AAYA,MAAMY,aAAa,GAAIhB,IAAD,IAAU;AAC9B,QAAMiB,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBnB,IAAI,CAACoB,KAA1B;AACAH,EAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BnB,IAAI,CAACqB,WAAhC;AACAJ,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBnB,IAAI,CAACsB,KAA1B;AACAL,EAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBI,IAAI,CAACC,SAAL,CAAexB,IAAI,CAACyB,SAApB,CAAzB;AACAR,EAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBI,IAAI,CAACC,SAAL,CAAexB,IAAI,CAAC0B,SAApB,CAAzB;AACAT,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBnB,IAAI,CAAC2B,QAA7B;AACAV,EAAAA,IAAI,CAACE,MAAL,CAAY,iBAAZ,EAA+BnB,IAAI,CAAC4B,eAApC;AAEAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,IAA7B;AACA,SAAOR,kBAAkB,CACtBmB,IADI,CACC,SADD,EACYM,IADZ,EAEJpB,IAFI,CAEEC,MAAD,IAAY,CAAE,CAFf,EAGJK,KAHI,CAGGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GALI,CAAP;AAMD,CAjBD;;AAmBA,SAASY,aAAT,EAAwBrB,cAAxB,EAAwCmB,oBAAxC,EAA8DR,cAA9D","sourcesContent":["import axios from 'axios';\n\nconst baseProjectService = axios.create({\n  baseURL: '/api/project',\n});\n\nconst getAllprojects = () => {\n  return baseProjectService\n    .get('/list')\n    .then((result) => {\n      const projects = result.data.projects;\n      return Promise.resolve(projects);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getProjectById = (id) => {\n  return baseProjectService\n    .get(`/${id}`)\n    .then((result) => {\n      const project = result.data.project;\n      return Promise.resolve(project);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst updateProject = (body) => {\n  return baseProjectService\n    .post(`/${body.id}/edit`, body)\n    .then((result) => {\n      const project = result.data.project;\n      console.log(project);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst getProjectByCategory = (category) => {\n  return baseProjectService\n    .get(`/category/${category}`)\n    .then((result) => {\n      const projects = result.data.projects;\n      return Promise.resolve(projects);\n    })\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nconst createProject = (data) => {\n  const form = new FormData();\n  form.append('title', data.title);\n  form.append('description', data.description);\n  form.append('money', data.money);\n  form.append('resources', JSON.stringify(data.resources));\n  form.append('volunteer', JSON.stringify(data.volunteer));\n  form.append('location', data.location);\n  form.append('coverPictureUrl', data.coverPictureUrl);\n\n  console.log('create client', data);\n  return baseProjectService\n    .post('/create', form)\n    .then((result) => {})\n    .catch((err) => {\n      return Promise.reject(err);\n    });\n};\n\nexport { createProject, getAllprojects, getProjectByCategory, getProjectById };\n"]},"metadata":{},"sourceType":"module"}