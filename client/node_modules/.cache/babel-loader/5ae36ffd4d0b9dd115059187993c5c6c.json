{"ast":null,"code":"var _jsxFileName = \"/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/views/EditProject/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.scss';\nimport { updateProject, getProjectById } from './../../services/project';\n\nclass EditProjectView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      // console.log(this.state.project);\n      const newProject = { ...this.state.project\n      };\n      newProject[name] = value;\n      this.setState({\n        project: newProject\n      });\n    };\n\n    this.handleFileInputChange = event => {\n      const {\n        name\n      } = event.target;\n      const file = event.target.files[0];\n      const newProject = { ...this.state.project\n      };\n      newProject[name] = file;\n      this.setState({\n        project: newProject\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // console.log(this.state.project);\n\n      const id = this.props.match.params.project_id;\n      const {\n        title,\n        location,\n        shortDescription,\n        coverPictureUrl\n      } = this.state.project; // console.log(title, location, shortDescription, coverPictureUrl);\n\n      updateProject({\n        id,\n        title,\n        location,\n        shortDescription,\n        coverPictureUrl\n      }).then(project => {\n        this.props.history.push(`/project/${id}`);\n      }).catch(error => {\n        // console.log('This is the error');\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      project: null,\n      loaded: false\n    };\n  }\n\n  loadSingleProject() {\n    const id = this.props.match.params.project_id;\n    getProjectById(id).then(project => {\n      // console.log('project:', project);\n      this.setState({\n        loaded: true,\n        project: { ...project\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.loadSingleProject();\n  }\n\n  render() {\n    const project = this.state.project;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, !this.state.loaded && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Loading...\")), project && /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"update-title\",\n      name: \"title\",\n      value: project.title,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"shortDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"update-shortDescription\",\n      name: \"shortDescription\",\n      value: project.shortDescription,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"update-location\",\n      name: \"location\",\n      value: project.location,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"coverPictureUrl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Cover Picture\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"coverPictureUrl\",\n      id: \"coverPictureUrl\",\n      onChange: this.handleFileInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \" Submit \")));\n  }\n\n}\n\nexport default EditProjectView;","map":{"version":3,"sources":["/Users/fguerreir0/ironhack/projects/project3-crowdfunding/client/src/views/EditProject/index.jsx"],"names":["React","Component","updateProject","getProjectById","EditProjectView","constructor","props","handleInputChange","target","name","value","newProject","state","project","setState","handleFileInputChange","event","file","files","handleSubmit","preventDefault","id","match","params","project_id","title","location","shortDescription","coverPictureUrl","then","history","push","catch","error","console","log","loaded","loadSingleProject","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.scss';\nimport { updateProject, getProjectById } from './../../services/project';\n\nclass EditProjectView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { project: null, loaded: false };\n  }\n\n  handleInputChange = ({ target: { name, value } }) => {\n    // console.log(this.state.project);\n    const newProject = { ...this.state.project };\n    newProject[name] = value;\n    this.setState({\n      project: newProject\n    });\n  };\n\n  loadSingleProject() {\n    const id = this.props.match.params.project_id;\n    getProjectById(id)\n      .then((project) => {\n        // console.log('project:', project);\n        this.setState({\n          loaded: true,\n          project: { ...project }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  componentDidMount() {\n    this.loadSingleProject();\n  }\n\n  handleFileInputChange = (event) => {\n    const { name } = event.target;\n    const file = event.target.files[0];\n    const newProject = { ...this.state.project };\n    newProject[name] = file;\n    this.setState({\n      project: newProject\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state.project);\n    const id = this.props.match.params.project_id;\n    const { title, location, shortDescription, coverPictureUrl } = this.state.project;\n\n    // console.log(title, location, shortDescription, coverPictureUrl);\n    updateProject({ id, title, location, shortDescription, coverPictureUrl })\n      .then((project) => {\n        this.props.history.push(`/project/${id}`);\n      })\n      .catch((error) => {\n        // console.log('This is the error');\n        console.log(error);\n      });\n  };\n\n  render() {\n    const project = this.state.project;\n\n    return (\n      <div>\n        {!this.state.loaded && (\n          <>\n            <span>Loading...</span>\n          </>\n        )}\n        {project && (\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor='title'>Title</label>\n            <input\n              type='text'\n              className='update-title'\n              name='title'\n              value={project.title}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor='shortDescription'>Description</label>\n            <input\n              type='text'\n              className='update-shortDescription'\n              name='shortDescription'\n              value={project.shortDescription}\n              onChange={this.handleInputChange}\n            />\n\n            <label htmlFor='location'>Location</label>\n            <input\n              type='text'\n              className='update-location'\n              name='location'\n              value={project.location}\n              onChange={this.handleInputChange}\n            />\n\n            <label htmlFor='coverPictureUrl'>Cover Picture</label>\n            <input\n              type='file'\n              name='coverPictureUrl'\n              id='coverPictureUrl'\n              onChange={this.handleFileInputChange}\n            />\n\n            <button> Submit </button>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditProjectView;\n"]},"metadata":{},"sourceType":"module"}